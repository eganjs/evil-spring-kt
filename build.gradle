import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
    ext {
        javaVersion = "1.8"
        kotlinVersion = "1.2.60"
        springBootVersion = "2.0.4.RELEASE"
        rxKotlinVersion = "2.2.0"

        assertJVersion = "3.10.0"
        restAssuredVersion = "3.1.0"

        h2Version = "1.4.197"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
    }
}

apply plugin: "kotlin"
apply plugin: "kotlin-spring"
apply plugin: "kotlin-jpa"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

group = "io.eganjs"
version = "0.0.1-SNAPSHOT"

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.assertj:assertj-core:$assertJVersion"
    testImplementation "io.rest-assured:rest-assured:$restAssuredVersion"

    runtime "com.h2database:h2:$h2Version"
}

tasks.withType(JavaCompile) {
    def javaCompileVersion = JavaVersion.values().find { it.toString() == javaVersion }
    sourceCompatibility = javaCompileVersion
    targetCompatibility = javaCompileVersion
}

tasks.withType(KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = javaVersion
    }
}
